{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","className","src","this","props","monster","id","name","email","Component","CardList","monsters","map","SearchBox","type","placeholder","value","searchKey","onChange","handleChange","App","e","setState","target","console","log","state","fetch","then","response","json","users","filterList","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAgBeA,G,yLAZX,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BC,KAAKC,MAAMC,QAAQC,GAA7C,4BAEL,6BAAKH,KAAKC,MAAMC,QAAQE,OACxB,4BAAIJ,KAAKC,MAAMC,QAAQG,e,GARZC,cCgBJC,E,uKATX,OACE,qBAAKT,UAAU,YAAf,SACGE,KAAKC,MAAMO,SAASC,KAAI,SAACP,GAAD,OACvB,cAAC,EAAD,CAAMA,QAASA,a,GATFI,aCiBRI,G,6KAZX,OACE,uBACEC,KAAK,SACLb,UAAU,SACVc,YAAaZ,KAAKC,MAAMW,YACxBC,MAAOb,KAAKC,MAAMa,UAClBC,SAAUf,KAAKC,MAAMe,mB,GAXLV,cCuCTW,E,kDArCb,aAAe,IAAD,8BACZ,gBAWFD,aAAe,SAACE,GACd,EAAKC,SAAS,CAAEL,UAAWI,EAAEE,OAAOP,QAAS,kBAC3CQ,QAAQC,IAAI,EAAKC,MAAMT,eAZzB,EAAKS,MAAQ,CACXf,SAAU,GACVM,UAAW,IAJD,E,gEAOO,IAAD,OAClBU,MAAM,8CAA8CC,MAAK,SAACC,GAAD,OACvDA,EAASC,OAAOF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEX,SAAUoB,Y,+BASpD,IAAD,EACyB5B,KAAKuB,MAA7Bf,EADD,EACCA,SAAUM,EADX,EACWA,UACZe,EAAarB,EAASsB,QAAO,SAAC5B,GAClC,OAAOA,EAAQE,KAAK2B,cAAcC,SAASlB,EAAUiB,kBAEvD,OACE,sBAAKjC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEc,YAAY,SACZC,MAAOb,KAAKuB,MAAMT,UAClBE,aAAchB,KAAKgB,eAErB,cAAC,EAAD,CAAUR,SAAUqB,W,GAhCVvB,aCQH2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1967d168.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./card.css\";\r\nclass Card extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"card-container\">\r\n        <img\r\n          src={`https://robohash.org/${this.props.monster.id}?set=set2&size=180x180`}\r\n        />\r\n        <h2>{this.props.monster.name}</h2>\r\n        <p>{this.props.monster.email}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nimport \"./card-list.css\";\r\nimport Card from \"../card/card\";\r\nclass CardList extends Component {\r\n  //   constructor(props) {\r\n  //     super(props);\r\n  //   }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card-list\">\r\n        {this.props.monsters.map((monster) => (\r\n          <Card monster={monster} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CardList;\r\n","import React, { Component } from \"react\";\r\nimport \"./search-box.css\";\r\n\r\nclass SearchBox extends Component {\r\n  //   constructor(props) {\r\n  //     super(props);\r\n  //   }\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"search\"\r\n        className=\"search\"\r\n        placeholder={this.props.placeholder}\r\n        value={this.props.searchKey}\r\n        onChange={this.props.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/card-list/card-list\";\nimport SearchBox from \"./components/search-box/search-box\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchKey: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then((response) =>\n      response.json().then((users) => this.setState({ monsters: users }))\n    );\n  }\n  handleChange = (e) => {\n    this.setState({ searchKey: e.target.value }, () =>\n      console.log(this.state.searchKey)\n    );\n  };\n\n  render() {\n    const { monsters, searchKey } = this.state;\n    const filterList = monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchKey.toLowerCase());\n    });\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"search\"\n          value={this.state.searchKey}\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filterList} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}